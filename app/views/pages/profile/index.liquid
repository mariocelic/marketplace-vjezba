---
slug: profile
---
{% liquid
  function current_profile = 'lib/current_profile', user_id: context.current_user.id, followships: true, membership: true
  include 'lib/profile_present_or_redirect', profile: current_profile

  assign template = "/profile/{slug}"
  assign query = context.location.pathname | extract_url_params: template

  unless query
    assign template = "/profile/{slug}/{section}"
    assign query = context.location.pathname | extract_url_params: template
  endunless

  function profile = 'lib/queries/profiles/find', slug: query.slug

  unless profile.id
    render 'theme/simple/404', status: 404
    break
  endunless

  assign section = query.section | default: 'activity'
  assign profile_id = profile.id | default: 'there-should-be'

  if section == 'activity'
    function list = 'lib/queries/activities/search', feed: 'user-public', feed_id: profile.id, limit: 100
    function presigned_url = 'lib/queries/presigned_url'
  elsif section == 'groups'
    function list = 'lib/queries/groups/search_for_member', limit: 20, name: 'membership', member_id: profile_id
  elsif section == 'following'
    function list = 'lib/queries/relationships/search', limit: 20, name: 'followship', l_id: profile_id
  elsif section == 'followers'
    function list = 'lib/queries/relationships/search', limit: 20, name: 'followship', r_id: profile_id
  elsif section == 'products'
    function list = 'lib/queries/items/search', query: context.params, limit: 20, owner: profile_id
  endif

  graphql conversation = 'modules/chat/find_conversation', from_id: current_profile.id, to_id: profile.id
  graphql messages = 'modules/chat/find_messages', conversation_id: conversation.records.results.first.id

  function chat_enabled = 'lib/queries/constants/find' name: "USE_WEBSOCKET_CHAT", type: "boolean", context: context

  render 'theme/simple/profile/show', section: section, user: profile, list: list, current_profile: current_profile, conversation: conversation, messages: messages, chat_enabled: chat_enabled
%}
